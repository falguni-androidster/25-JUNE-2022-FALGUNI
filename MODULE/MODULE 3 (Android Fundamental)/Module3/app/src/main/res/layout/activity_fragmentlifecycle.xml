<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".FragmentLifecycleActivity"
    android:orientation="vertical"
    android:background="@drawable/app_background"
    android:padding="@dimen/padding_16">

    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="@string/lifecycle_fragment"
        android:textColor="@color/white"
        android:textSize="@dimen/txt_20"
        android:textAlignment="center"
        android:layout_marginTop="@dimen/margin_20" />

    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginTop="@dimen/margin_60"
        android:layout_marginLeft="@dimen/margin_20"
        android:layout_marginRight="@dimen/margin_20"
        android:background="@drawable/btn_whitebg"
        android:padding="@dimen/padding_16"
        android:text="Fragment   :-   A Fragment represents a reusable portion of your app's UI. A fragment defines and manages its own layout, has its own lifecycle, and can handle its own input events. Fragments cannot live on their own--they must be hosted by an activity or another fragment."
        android:textColor="@color/purple_700"
        android:textSize="@dimen/txt_16" />

    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginTop="@dimen/margin_20"
        android:layout_marginLeft="@dimen/margin_20"
        android:layout_marginRight="@dimen/margin_20"
        android:background="@drawable/btn_whitebg"
        android:padding="@dimen/padding_16"
        android:text="Fragment Lifecycle   :-   The Fragment class has two callback methods, onAttach() and onDetach() , that you can override to perform work when either of these events occur. The onAttach() callback is invoked when the fragment has been added to a FragmentManager and is attached to its host activity"
        android:textColor="@color/purple_700"
        android:textSize="@dimen/txt_16" />

</LinearLayout>